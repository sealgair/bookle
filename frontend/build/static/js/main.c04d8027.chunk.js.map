{"version":3,"sources":["ServerComponent.js","Passage.js","utils.js","Canvas.js","Share.js","Lookup.js","Guesses.js","ModalComponent.js","Info.js","HowTo.js","Settings.js","Statistics.js","App.js","reportWebVitals.js","i18n.js","index.js"],"names":["ServerComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","server","crossDomain","fetch","bind","assertThisInitialized","url","success","fail","headers","Content-Type","then","res","json","result","error","console","log","React","Component","sanitizeHtml","require","Passage","context","state","guesses","_this2","document","addEventListener","event","setState","detail","count","_this3","lines","map","line","i","react_default","a","createElement","className","key","dangerouslySetInnerHTML","__html","allowedTags","allowedAttributes","withTranslation","cssVar","name","getComputedStyle","body","getPropertyValue","isTouchOnly","window","matchMedia","matches","removeDiacritics","text","normalize","replace","setData","value","localStorage","setItem","JSON","stringify","getData","def","getItem","parse","_unused","Canvas","canvas","createRef","image","current","getContext","draw","src","toDataURL","_this$props","rest","objectWithoutProperties","assign","ref","alt","title","style","width","height","Share","shareName","baseShareName","options","scoreImage","toggleOptions","shareScore","getScore","getOpener","makeScore","makeScoreImage","makeScoreDescription","alertShare","setTextStyle","setSpoilerStyle","setImageStyle","setStyle","t","prev","newName","setTimeout","puzzle","order","newline","opener","trim","concat","score","src_Canvas","ctx","_boxColors","y","fillStyle","fillRect","font","fillText","off","maxWidth","words","split","currentLine","length","word","measureText","push","getLines","ox","forEach","boxColors","defineProperty","strokeStyle","x","guess","size","hint","author","book","translate","s","lineWidth","h","beginPath","moveTo","lineTo","stroke","drawCheck","year","scale","closePath","fill","drawArrow","setTransform","URL","description","num","_$0$1$guess$hint$yea","join","_pubyear","pubyear","wrong","scoreCard","splice","data","navigator","share","r","clipboard","writeText","alert","prevProps","prevState","snapshot","opacity","Math","max","children","scrollHeight","shareClass","instructions","role","aria-label","tabIndex","autoFocus","onClick","aria-hidden","aria-live","Trans","i18nKey","Lookup","selected","books","handleKeypress","handleChange","handleSelect","selectBook","handleBlur","loadBooks","filteredBooks","bcount","code","guessId","target","onSelect","id","textContent","rd","patterns","RegExp","filter","reduce","p","pat","alternate_titles","match","authors","answer","b","bookName","type","disabled","filtered","self","list","classes","aria-selected","htmlFor","placeholder","aria-controls","aria-autocomplete","aria-expanded","aria-activedescendant","onBlur","onChange","onKeyDown","HINTS","_HINTS","Guesses","done","Array","isArray","dispatchGuess","guessing","handleKey","makeGuess","classList","contains","preventDefault","customEvent","CustomEvent","dispatchEvent","params","URLSearchParams","toString","sid","mapGuess","scores","n","lookup","button","src_Lookup","src_Share","ModalComponent","on","close","contents","onClose","inClass","element","parentElement","getTitle","Info","href","rel","HowTo","siteLanguages","en","endonym","es","fr","Settings","changeShareStyle","i18n","scoring","g","language","languageChoices","keys","lang","checked","resolvedLanguage","e","changeLanguage","Statistics","games","wins","maxScore","cStreak","mStreak","values","won","parseInt","c","distribution","App","modal","openInfo","openHelp","openSettings","openStats","closeModal","src_Passage","src_Guesses","src_Info","src_HowTo","src_Settings","src_Statistics","Date","getTimezoneOffset","reportWebVitals","onPerfEntry","Function","__webpack_require__","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","LanguageDetector","initReactI18next","init","debug","fallbackLng","interpolation","escapeValue","ReactDOM","createRoot","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.c04d8027.chunk.js","sourcesContent":["import React from \"react\";\n\n\nclass ServerComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n            // development build code\n            this.server = props.server || \"http://\" + window.location.host.split(':')[0] + \":8000\";\n            this.crossDomain = true;\n        } else {\n            // production build code\n            this.server = props.server || \"\";\n            this.crossDomain = false;\n        }\n        this.fetch = this.fetch.bind(this);\n    }\n\n    fetch(url, success, fail) {\n        let headers = {};\n        if (this.crossDomain) {\n            headers = {\n                crossDomain: true,\n                headers: {'Content-Type': 'application/json'},\n            };\n        }\n        fetch(this.server + url, headers)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    success(result)\n                },\n                (error) => {\n                    if (fail) {\n                        fail(error);\n                    } else {\n                        console.log(error);\n                    }\n                }\n            );\n    }\n}\n\nexport default ServerComponent;\n","import React from \"react\";\nimport {withTranslation} from \"react-i18next\";\nconst sanitizeHtml = require('sanitize-html');\n\nclass Passage extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            guesses: 0\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('guess', event => this.setState({'guesses': event.detail.count}));\n    }\n\n    render() {\n        const lines = this.props.lines.map((line, i)=>\n            <span className={\"line\" + (i <= this.state.guesses ? \" shown\" : \"\")} key={i} dangerouslySetInnerHTML={{\n                __html: sanitizeHtml(line, {\n                    allowedTags: ['em'],\n                    allowedAttributes: []\n                })\n            }}>\n            </span>\n        );\n        return (\n            <div className=\"PhraseContainer\">\n                {lines}\n            </div>\n        )\n    }\n}\n\nexport default withTranslation()(Passage);","function compare(a, b) {\n    if (a < b) {\n        return -1;\n    } else if (a > b) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nfunction randomInt(r, f) {\n    f = f || 0;\n    return Math.floor(Math.random() * r) + f\n}\n\nfunction randomChoice(arr) {\n    return arr[randomInt(arr.length)];\n}\n\nfunction cssVar(name) {\n    return getComputedStyle(document.body).getPropertyValue(name);\n}\n\nfunction isTouchOnly() {\n    return window.matchMedia(\"(any-hover: none)\").matches;\n}\n\nfunction isLightMode() {\n    return window.matchMedia(\"(prefers-color-scheme: light)\").matches;\n}\n\nfunction escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nfunction removeDiacritics(text) {\n    return text.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n\nfunction setData(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n}\n\nfunction getData(key, def) {\n    let value = localStorage.getItem(key);\n    try {\n        value = JSON.parse(value);\n    } catch {\n    }\n    if (value === null) {\n        value = def;\n    }\n    return value;\n}\n\nfunction inClass(element, className) {\n    if (element.classList.contains(className)) {\n        return true;\n    }\n    if (element.parentElement) {\n        return inClass(element.parentElement, className);\n    }\n    return false;\n}\n\nfunction getLines(ctx, text, off) {\n    const maxWidth = ctx.canvas.width - off;\n    const words = text.split(\" \");\n    let lines = [];\n    let currentLine = words[0];\n\n    for (let i = 1; i < words.length; i++) {\n        const word = words[i];\n        const width = ctx.measureText(currentLine + \" \" + word).width;\n        if (width < maxWidth) {\n            currentLine += \" \" + word;\n        } else {\n            lines.push(currentLine);\n            currentLine = word;\n        }\n    }\n    lines.push(currentLine);\n    return lines;\n}\n\nfunction drawArrow(ctx, s) {\n    const h = (s / 2);\n    ctx.beginPath();\n    ctx.moveTo(0, -h);\n    ctx.lineTo(-h, 0);\n    ctx.lineTo(-h/2, 0);\n    ctx.lineTo(-h/2, h);\n    ctx.lineTo(h/2, h);\n    ctx.lineTo(h/2, 0);\n    ctx.lineTo(h, 0);\n    ctx.closePath();\n    ctx.fill();\n}\n\nfunction drawCheck(ctx, s) {\n    ctx.lineWidth = 4;\n    const h = (s / 2);\n    ctx.beginPath();\n    ctx.moveTo(-h, 0);\n    ctx.lineTo(-2, h-2);\n    ctx.lineTo(h, -h);\n    ctx.stroke();\n}\n\nexport {\n    getLines,\n    drawArrow,\n    drawCheck,\n    compare,\n    randomInt,\n    randomChoice,\n    cssVar,\n    isTouchOnly,\n    isLightMode,\n    escapeRegExp,\n    removeDiacritics,\n    setData,\n    getData,\n    inClass\n}","import React from \"react\";\n\nclass Canvas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.canvas = React.createRef();\n        this.image = React.createRef();\n    }\n\n    componentDidMount() {\n        const context = this.canvas.current.getContext('2d');\n        this.props.draw(context);\n        this.image.current.src = this.canvas.current.toDataURL();\n    }\n\n    render() {\n        const {draw, ...rest} = this.props;\n        return <div className=\"CanvasContainer\">\n            <canvas ref={this.canvas} className=\"Hide\" {...rest}/>\n            <img ref={this.image} alt={this.props.title} style={{\n                width: this.props.width, height: this.props.height\n            }}/>\n        </div>;\n    }\n}\n\nexport default Canvas;\n","import React from \"react\";\nimport {cssVar, getData, isLightMode, isTouchOnly, setData, getLines, drawArrow, drawCheck} from \"./utils\";\nimport Canvas from \"./Canvas\";\nimport {withTranslation, Trans} from \"react-i18next\";\n\nclass Share extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            style: getData(\"shareStyle\", \"text\"),\n            shareName: this.baseShareName(),\n            options: false,\n        };\n        this.options = React.createRef();\n        this.scoreImage = React.createRef();\n        this.toggleOptions = this.toggleOptions.bind(this);\n        this.shareScore = this.shareScore.bind(this);\n        this.getScore = this.getScore.bind(this);\n        this.getOpener = this.getOpener.bind(this);\n        this.makeScore = this.makeScore.bind(this);\n        this.makeScoreImage = this.makeScoreImage.bind(this);\n        this.makeScoreDescription = this.makeScoreDescription.bind(this);\n        this.alertShare = this.alertShare.bind(this);\n        this.setTextStyle = this.setTextStyle.bind(this);\n        this.setSpoilerStyle = this.setSpoilerStyle.bind(this);\n        this.setImageStyle = this.setImageStyle.bind(this);\n        this.setStyle = this.setStyle.bind(this);\n    }\n\n    baseShareName() {\n        const t = this.props.t;\n        const style = getData(\"shareStyle\", \"text\");\n        return style === \"image\" ? t(\"buttons.copyAlt\") : t(\"buttons.share\");\n    }\n\n    toggleOptions() {\n        this.setState(prev => ({options: !prev.options}));\n    }\n\n    alertShare(newName) {\n        this.setState({shareName: newName});\n        setTimeout(() => this.setState({shareName: this.baseShareName()}), 3000);\n    }\n\n    getScore() {\n        const scores = getData('scores');\n        return scores[this.props.puzzle.order];\n    }\n\n    getOpener(newline) {\n        let opener = this.props.puzzle.lines[0].trim();\n        if (!newline) {\n            opener = opener.replace(/\\s*\\n\\s*/g, '/ ');\n        }\n        opener = opener.replace(/\\s*<\\/?em>\\s*/g, '');\n        return `\"${opener.trim()}\"`;\n    }\n\n    makeScoreImage() {\n        const score = this.getScore();\n        const title = `Novle #${this.props.puzzle.order}: ${score}/6`;\n        let opener = this.getOpener(true);\n        const guesses = this.props.guesses;\n        const size = 30;\n        const ox = 10;\n        const ix = 10;\n        const oy = 30;\n        const ly = 10;\n        return <Canvas draw={function (ctx) {\n            let y = oy;\n            ctx.fillStyle = cssVar('--bg-color');\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n            ctx.fillStyle = cssVar('--text-color');\n            ctx.font = '25px';\n            ctx.fillText(title, ox, y);\n            y += 30;\n            ctx.font = '25px';\n            getLines(ctx, opener, ox * 2).forEach(function (line, i) {\n                ctx.fillText(line, ox * 2, y);\n                y += 20\n            });\n\n            const boxColors = {\n                [true]: cssVar('--almost-color'),\n                [false]: cssVar('--incorrect-color'),\n            }\n            ctx.strokeStyle = cssVar('--text-color');\n            let x = ox + ix;\n            guesses.forEach(function (guess, i) {\n                ctx.fillStyle = cssVar('--text-color');\n                ctx.fillRect(x-2, y-2, size+4, size+4);\n                ctx.fillStyle = boxColors[guess.hint.author];\n                ctx.fillRect(x, y, size, size);\n\n                if (guess.hint.book) {\n                    ctx.font = '18px mono';\n                    ctx.fillStyle = cssVar('--correct-color');\n                    ctx.fillRect(x, y, size, size);\n                    ctx.translate(x + size / 2, y + size / 2);\n                    drawCheck(ctx, size - 10);\n                } else {\n                    ctx.fillRect(x, y, size, size);\n                    ctx.fillStyle = cssVar('--text-color');\n                    ctx.translate(x + size / 2, y + size / 2);\n                    if (guess.hint.year === -1) {\n                        ctx.scale(1, -1);\n                    }\n                    drawArrow(ctx, size - 10);\n                }\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                x += size + 8;\n            });\n            y += size + ly;\n\n            ctx.fillStyle = cssVar('--text-color');\n            ctx.font = '20px';\n            ctx.fillText(document.URL, ox, y + 20);\n        }} width={(size + 1) * 6 + (ox + ix) * 2} height={(size + ly) * (guesses.length) + 70 + oy + ly}\n                       title={this.makeScoreDescription()}/>\n    }\n\n    makeScoreDescription() {\n        const t = this.props.t;\n        let description = [t('share.alt.title', {num: this.props.puzzle.order})];\n        description.push(this.getOpener());\n        const score = this.getScore();\n        if (this.props.success) {\n            description.push(t(\"share.alt.score\", {count: score}));\n        } else {\n            description.push(t(\"share.alt.miss\"));\n        }\n        this.props.guesses.forEach(function (guess, i) {\n            let line = t('share.alt.guessTitle', {num: i + 1});\n            if (guess.hint.book) {\n                line += t('share.alt.guessRight');\n            } else {\n                line += t('share.alt.author', {context: guess.hint.author ? 'right' : 'wrong'}) + ', ';\n                line += t('share.alt.year', {context: {[-1]: 'early', 0: 'right', 1: 'late'}[guess.hint.year]});\n            }\n            description.push(line);\n        });\n        description.push(t('share.alt.link', {url: document.URL}));\n        return description.join(\"\\n\");\n    }\n\n    makeScore() {\n        const style = this.state.style;\n        const score = this.getScore();\n        const title = `#Novle #${this.props.puzzle.order}: ${score}/6\\n${this.getOpener()}`;\n        if (style === \"image\") {\n            return this.makeScoreImage();\n        }\n\n        const pubyear = {\n            [-1]: '⬇️️',\n            0: '✅',\n            1: '⬆️'\n        }\n        const right = '🟩';\n        const almost = '🟧';\n        const wrong = isLightMode() ? '⬜' : '⬛';\n        let scoreCard = [];\n        if (style === \"spoiler\") {\n            scoreCard = this.props.guesses.map(function (guess) {\n                if (guess.hint.book) {\n                    return right+pubyear[0];\n                } else {\n                    let hint = [];\n                    if (guess.hint.author) {\n                        hint.push(almost);\n                    } else {\n                        hint.push(wrong);\n                    }\n                    hint.push(pubyear[guess.hint.year]+' ');\n                    hint.push(\" ||`\" + guess.book + \"`||\")\n                    return hint.join(\"\");\n                }\n            });\n        } else {\n            let score = \"📖 \" + this.props.guesses.map(function (guess) {\n                if (guess.hint.book) {\n                    return right+pubyear[0];\n                } else {\n                    return (guess.hint.author ? almost : wrong) + pubyear[guess.hint.year]\n                }\n            }).join(\" \");\n            scoreCard = [score];\n        }\n        scoreCard.splice(0, 0, title);\n        scoreCard.push(document.URL);\n        return scoreCard.join(\"\\n\");\n    }\n\n    shareScore() {\n        let data = this.makeScore();\n        if (this.state.style === \"image\") {\n            data = this.makeScoreDescription();\n        }\n        if (isTouchOnly() && this.state.style !== \"image\" && navigator.share) {\n            navigator.share({\n                title: \"Novle\",\n                text: data,\n            }).then(r => this.alertShare(\"Shared\"));\n        } else if (navigator.clipboard) {\n            navigator.clipboard.writeText(data).then(r => this.alertShare(\"Copied\"));\n        } else {\n            alert(\"Could not copy to clipboard, copy manually here:\\n\\n\" + data);\n        }\n    }\n\n    setStyle(style) {\n        setData(\"shareStyle\", style)\n        this.setState({\n            style: style,\n            shareName: this.baseShareName(),\n        });\n    }\n\n    setTextStyle() {\n        this.setStyle(\"text\");\n    }\n\n    setSpoilerStyle() {\n        this.setStyle(\"spoiler\");\n    }\n\n    setImageStyle() {\n        this.setStyle(\"image\");\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        let height = 0;\n        let opacity = 0;\n        if (this.state.options) {\n            height = Math.max(\n                this.options.current.children[0].scrollHeight + 10,\n                this.options.current.children[1].scrollHeight,\n            ) + 'px';\n            opacity = 1;\n        }\n        this.options.current.style = \"height: \" + height + \"; opacity: \" + opacity + \";\";\n        if (this.scoreImage.current) {\n            height = 0;\n            opacity = 0;\n            if (!this.state.options) {\n                height = this.scoreImage.current.scrollHeight + 'px';\n                opacity = 1;\n            }\n            this.scoreImage.current.style = \"height: \" + height + \"; opacity: \" + opacity + \";\";\n        }\n    }\n\n    render() {\n        const t = this.props.t;\n        let shareClass = \"Guess Share\";\n        if (!this.props.success) {\n            shareClass += \" Fail\";\n        }\n        let instructions = \"\";\n        let image = \"\";\n        if (this.state.style === \"image\") {\n            instructions = t(\"share.instructions\", {\n                \"context\": isTouchOnly() ? \"tap\" : \"click\"\n            })\n            image = (<div className=\"ScoreImage Foldable\" ref={this.scoreImage}>\n                {this.makeScoreImage()}\n            </div>)\n        }\n        let score = this.makeScore();\n        if (this.state.style !== \"image\") {\n            score = <pre role=\"img\" aria-label={t(\"share.description\")}>{score}</pre>;\n        }\n        return <div className=\"ShareBox\">\n            <button tabIndex=\"0\" autoFocus className={shareClass}\n                    onClick={this.shareScore}>{this.state.shareName}</button>\n            <div className=\"ShareData Foldable\" ref={this.options} aria-hidden={this.state.options ? \"false\" : \"true\"}\n                 style={{height: 0, opacity: 0}} aria-live=\"polite\">\n                <div className=\"ShareOptions\" aria-label={t(\"share.styleChoice\")}>\n                    <button className={\"ShareOption\" + ((this.state.style === \"text\") ? \" Selected\" : \"\")}\n                            onClick={this.setTextStyle}>{t(\"share.textStyle\")}\n                    </button>\n                    <button className={\"ShareOption\" + ((this.state.style === \"spoiler\") ? \" Selected\" : \"\")}\n                            onClick={this.setSpoilerStyle}>{t(\"share.spoilerStyle\")}\n                    </button>\n                    <button className={\"ShareOption\" + ((this.state.style === \"image\") ? \" Selected\" : \"\")}\n                            onClick={this.setImageStyle}>{t(\"share.imageStyle\")}\n                    </button>\n                </div>\n                <div className=\"ShareContent\" aria-live=\"polite\">\n                    {instructions}\n                    {score}\n                </div>\n            </div>\n            {image}\n            <button className=\"ToggleShareOptions\" onClick={this.toggleOptions}>\n                <Trans i18nKey=\"share.options\">Share<br/>Options</Trans>\n            </button>\n        </div>;\n    }\n}\n\nexport default withTranslation()(Share);","import ServerComponent from \"./ServerComponent\";\nimport {escapeRegExp, removeDiacritics} from \"./utils\";\nimport {withTranslation} from \"react-i18next\";\nimport React from \"react\";\n\nclass Lookup extends ServerComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            selected: 0,\n            books: []\n        };\n\n        this.handleKeypress = this.handleKeypress.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.selectBook = this.selectBook.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.loadBooks = this.loadBooks.bind(this);\n    }\n\n    handleKeypress(event) {\n        let selected = this.state.selected;\n        let books = this.filteredBooks();\n        let bcount = books.length;\n\n        if (event.code === \"ArrowDown\") {\n            if (selected === null) {\n                selected = bcount - 1;\n            } else {\n                selected -= 1;\n            }\n            if (selected < 0) {\n                selected = null;\n            }\n        } else if (event.code === \"ArrowUp\") {\n            if (selected === null) {\n                selected = 0;\n            } else {\n                selected += 1;\n            }\n            if (selected >= bcount) {\n                selected = null;\n            }\n        }\n        if (event.code === \"Enter\") {\n            if (selected === null) {\n                selected = 0;\n            } else {\n                let book = books[selected];\n                this.selectBook(book);\n            }\n        }\n        this.setState({selected: selected});\n    }\n\n    handleChange(event) {\n        this.guessId = null;\n        this.setState({value: event.target.value, selected: null});\n        this.props.onSelect();\n    }\n\n    handleSelect(event) {\n        this.selectBook({id: event.target.value, title: event.target.textContent});\n    }\n\n    handleBlur(event) {\n    }\n\n    selectBook(book) {\n        if (book) {\n            this.guessId = book.id;\n            this.setState({value: book.title});\n            this.props.onSelect(book);\n        }\n    }\n\n    filteredBooks() {\n        const rd = removeDiacritics;\n        const query = rd(this.state.value);\n        const patterns = query.split(\" \").map(t => new RegExp('\\\\b' + escapeRegExp(t), 'gi'));\n        return this.state.books.filter(book => patterns.reduce(\n            (p, pat) => p && (rd(book.title + ' ' + book.alternate_titles).match(pat) || rd(book.authors.join(' ')).match(pat)),\n            true\n        ));\n    }\n\n    bookName(book, year) {\n        if (year) {\n            return `${book.title} (${book.authors.join(', ')}, ${book.year})`;\n        } else {\n            return `${book.title} (${book.authors.join(', ')})`;\n        }\n    }\n\n    render() {\n        if (this.props.answer) {\n            let answer = this.state.books.filter(b => b.id === this.props.answer);\n            if (answer.length === 1) {\n                answer = this.bookName(answer[0], true);\n            } else {\n                answer = \"\";\n            }\n            return <div className=\"LookupWrapper\" aria-live=\"polite\">\n                <input type=\"text\" className=\"Guess Lookup\" aria-label=\"correct answer\"\n                       disabled value={answer}/>\n            </div>;\n        }\n\n        let filtered = \"\";\n        let selected = null;\n        if (!this.guessId && this.state.value) {\n            const self = this;\n            let list = this.filteredBooks().map(function (book, i) {\n                let classes = \"Book\";\n                if (i === self.state.selected) {\n                    classes += \" Selected\";\n                    selected = book;\n                }\n                return (\n                    <li className={classes} key={book.id} value={book.id} role=\"option\" aria-selected={self.state.selected}\n                        onClick={self.handleSelect} id={\"book-\" + book.id}>\n                        {self.bookName(book)}\n                    </li>);\n            });\n            filtered = (\n                <ul className=\"BookList\" id=\"books\" aria-label=\"books\" role=\"listbox\">\n                    {list}\n                </ul>\n            )\n        }\n        const t = this.props.t;\n        return (\n            <div className=\"LookupWrapper\">\n                <label className=\"Hidden\" htmlFor=\"guess-lookup\">{t(\"lookup.description\")}</label>\n                <input id=\"guess-lookup\" type=\"text\" className=\"Guess Lookup\" autoFocus role=\"combobox\"\n                       placeholder={t(\"lookup.prompt\")} value={this.state.value}\n                       aria-controls=\"Books\"\n                       aria-autocomplete=\"list\"\n                       aria-expanded={filtered ? \"true\" : \"false\"}\n                       aria-activedescendant={selected ? \"Book-\" + selected.id : \"none\"}\n                       onBlur={this.handleBlur}\n                       onChange={this.handleChange} onKeyDown={this.handleKeypress}/>\n                {filtered}\n            </div>\n        )\n    }\n\n    componentWillUnmount() {\n        this.state.books = [];\n    }\n\n    loadBooks() {\n        this.fetch(\"/books.json\",\n            (result) => {\n                this.setState({\n                    books: result\n                })\n            }\n        );\n    }\n\n    componentDidMount() {\n        this.loadBooks();\n    }\n}\n\nexport default withTranslation()(Lookup);\n","import ServerComponent from \"./ServerComponent\";\nimport {getData, setData} from \"./utils\";\nimport Share from \"./Share\";\nimport React from \"react\";\nimport Lookup from \"./Lookup\";\nimport {withTranslation} from \"react-i18next\";\n\nconst HINTS = {\n    [-1]: 'fa-arrow-down',\n    1: 'fa-arrow-up',\n    0: 'fa-check',\n    [true]: 'fa-check',\n    [false]: 'fa-xmark',\n}\n\nclass Guesses extends ServerComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        let done = false;\n        let success = false;\n        let guesses = [];\n        if (this.props.puzzle) {\n            let data = getData('guess' + this.props.puzzle.order);\n            if (Array.isArray(data)) {\n                guesses = data;\n                success = guesses[guesses.length - 1].success;\n                done = success || guesses.length >= 6;\n                if (done) {\n                    this.dispatchGuess(6);\n                } else {\n                    this.dispatchGuess(guesses.length);\n                }\n            }\n        }\n        this.state = {\n            guess: null,\n            guesses: guesses,\n            guessing: false,\n            done: done,\n            success: success,\n        };\n        this.onSelect = this.onSelect.bind(this);\n        this.handleKey = this.handleKey.bind(this);\n        this.makeGuess = this.makeGuess.bind(this);\n    }\n\n    onSelect(guess) {\n        this.setState({\n            guess: guess,\n            done: guess ? guess.success : false,\n        });\n    }\n\n    handleKey(event) {\n        if (this.state.guess && event.code === \"Enter\" && event.target.classList.contains(\"Lookup\")) {\n            this.makeGuess();\n            event.preventDefault();\n        }\n    }\n\n    dispatchGuess(count) {\n        const customEvent = new CustomEvent('guess', { detail: { count: count } });\n        document.dispatchEvent(customEvent);\n    }\n\n    makeGuess() {\n        if (this.state.guessing) {\n            return;\n        }\n        const params = new URLSearchParams({\n            book: this.state.guess.id,\n            puzzle: this.props.puzzle.id,\n        }).toString();\n        this.setState({'guessing': true});\n        this.fetch(\"/guess.json?\" + params,\n            (result) => {\n                let guesses = this.state.guesses;\n                guesses.push(result);\n                let done = result.success || guesses.length >= 6;\n                this.setState({\n                    guesses: guesses,\n                    guessing: false,\n                    done: done,\n                    success: result.success,\n                    guess: null,\n                    sid: result.sid,\n                    mapGuess: null,\n                });\n                if (done) {\n                    this.dispatchGuess(6);\n                } else {\n                    this.dispatchGuess(guesses.length);\n                }\n\n                if (this.props.puzzle.order) {\n                    setData('guess' + this.props.puzzle.order, this.state.guesses);\n                    if (done) {\n                        let scores = getData('scores') || {};\n                        let score;\n                        if (result.success) {\n                            score = guesses.length;\n                        } else {\n                            score = 'X';\n                        }\n                        scores[this.props.puzzle.order] = score;\n                        setData('scores', scores);\n                    }\n                }\n            },\n            (error) => {\n                this.setState({guessing: false});\n            }\n        );\n    }\n\n    render() {\n        const t = this.props.t;\n\n        const numbers = [0, 1, 2, 3, 4, 5];\n        const guesses = numbers.map(n => this.state.guesses[n] || false);\n        const data = guesses.map(function (guess, n) {\n            if (guess) {\n                return (<li className=\"Guess Hints\" key={n}>\n                    <div className=\"author hint\">\n                        <div className='wrapper'>\n                            {guess.authors.map((author, i) => <div className=\"author\" key={i}>{author}</div>)}\n                        </div>\n                        <i className={`icon fa-solid ${HINTS[guess.hint.author]}`}></i>\n                    </div>\n                    <div className=\"bookTitle hint\">\n                        <div className=\"wrapper\">{guess.book}</div>\n                        <i className={`icon fa-solid ${HINTS[guess.hint.book]}`}></i>\n                    </div>\n                    <div className=\"year hint\" title={t('guess.yearHint', {\n                        context: {[-1]: 'early', 0: 'right', 1: 'late'}[guess.hint.year]\n                    })}>\n                        <div className=\"wrapper\">{guess.year}</div>\n                        <i className={`icon fa-solid ${HINTS[guess.hint.year]}`}></i>\n                    </div>\n                </li>);\n            } else {\n                return (<li className=\"Guess Empty\" key={n}/>);\n            }\n        });\n\n        let lookup = \"\";\n        let button = \"\";\n        if (this.state.done) {\n            if (!this.state.success) {\n                lookup = <Lookup key={this.state.guesses.length} answer={this.props.puzzle.book}/>;\n            }\n            button = <Share success={this.state.success} guesses={this.state.guesses}\n                            puzzle={this.props.puzzle}/>;\n        } else {\n            lookup = <Lookup onSelect={this.onSelect} key={this.state.guesses.length}/>;\n            button = <button tabIndex=\"0\" className=\"MakeGuess Guess\" onClick={this.makeGuess}\n                             disabled={this.state.guessing || !this.state.guess}>{t('buttons.guess')}</button>;\n        }\n\n        return <div className=\"GuessWrapper\">\n            <ul className=\"Guesses\">\n                {data}\n            </ul>\n            <div className=\"LookupSection\" onKeyDown={this.handleKey}>\n                {lookup}\n                {button}\n            </div>\n        </div>\n    }\n}\n\nexport default withTranslation()(Guesses);","import React from \"react\";\nimport {inClass} from \"./utils\";\n\nclass ModalComponent extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {on: false};\n        this.close = this.close.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.contents = this.contents.bind(this);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        return {on: props.on};\n    }\n\n    getTitle() {\n        return \"Modal\";\n    }\n\n    close(event) {\n        this.props.onClose(event);\n    }\n\n    onClick(event) {\n        if (inClass(event.target, \"Close\") || event.target.classList.contains(\"Overlay\")) {\n            this.close();\n        }\n    }\n\n    render() {\n        const t = this.props.t || ((s) => s); // needs to be injected in subclasses\n        let opacity = this.state.on ? 1 : 0;\n        let height = this.state.on ? \"100vh\" : 0;\n        return (\n            <div className=\"Overlay\" onClick={this.onClick} style={{\n                opacity: opacity, height: height\n            }} aria-hidden={this.state.on ? \"false\" : \"true\"} aria-live=\"polite\">\n                <div className=\"ModalContainer\">\n                    <h1>{this.getTitle()}</h1>\n                    <hr/>\n                    {this.contents()}\n                    <button className=\"Close Icon\">\n                        <span className=\"Description\">{t('buttons.close')}</span>\n                        <i className=\"fa-solid fa-circle-xmark\"></i>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    contents() {\n    }\n}\n\nexport default ModalComponent;","import React from \"react\";\nimport ModalComponent from \"./ModalComponent\";\nimport {withTranslation} from \"react-i18next\";\n\nclass Info extends ModalComponent {\n    getTitle() {\n        return this.props.t(\"titles.info\");\n    }\n\n    contents() {\n        const t = this.props.t;\n        return <div className=\"InfoContent\">\n            <p>{t(\"info.credit\")}</p>\n            <p>\n                <a href=\"https://github.com/sealgair/novle\" target=\"_new\">\n                    <i className=\"fa-brands fa-github Icon\"></i>\n                    {t(\"info.code\")}\n                </a>\n            </p>\n            <p>\n                <a href=\"https://twitter.com/ChaseCaster\" target=\"_new\">\n                    <i className=\"fa-brands fa-twitter Icon\"></i>\n                    {t(\"info.tweet\")}\n                </a>\n            </p>\n            <p>\n                <a rel=\"me\" href=\"https://weirder.earth/@chase\" target=\"_new\">\n                    <i className=\"fa-brands fa-mastodon Icon\"></i>\n                    {t(\"info.toot\")}\n                </a>\n            </p>\n            <p>\n                {t(\"info.bugs\")}\n            </p>\n            <hr/>\n            <div className=\"links\">\n                <div className=\"title\">{t(\"info.links\")}</div>\n                <a href=\"https://lingule.xyz\" target=\"_blank\" rel=\"noopener noreferrer\">Lingule</a>\n                <span> className=\"description\">{t(\"info.lingule\")}</span>\n            </div>\n        </div>;\n    }\n}\n\nexport default withTranslation()(Info);","import React from \"react\";\nimport ModalComponent from \"./ModalComponent\";\nimport {withTranslation} from \"react-i18next\";\n\nclass HowTo extends ModalComponent {\n    getTitle() {\n        return this.props.t(\"titles.how-to\");\n    }\n\n    contents() {\n        const t = this.props.t;\n        return (\n            <div>\n                <p>{t(\"howto.intro\")}</p>\n                <p>{t(\"howto.afterGuess\")}</p>\n                <div className=\"howTo\">\n                    {t(\"howto.example.phrase\")}\n                    <div className=\"PhraseContainer\">\n                        <span className=\"line shown\">It was the best of times, it was the worst of times,</span>\n                    </div>\n\n                    {t(\"howto.example.guess\")}\n                    <div className=\"GuessWrapper\">\n                        <ul className=\"Guesses\">\n                            <li className=\"Guess Hints\">\n                                <div className=\"author hint\">\n                                    Charles Dickens\n                                    <i className=\"icon fa-solid fa-check\"></i>\n                                </div>\n                                <div className=\"bookTitle hint\">\n                                    Oliver Twist\n                                    <i className=\"icon fa-solid fa-xmark\"></i>\n                                </div>\n                                <div className=\"year hint\">\n                                    1873\n                                    <i className=\"icon fa-solid fa-arrow-up\"></i>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                    {t(\"howto.example.explain\")}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withTranslation()(HowTo);","import {getData, setData} from \"./utils\";\nimport {withTranslation} from \"react-i18next\";\nimport React from \"react\";\nimport ModalComponent from \"./ModalComponent\";\n\nconst siteLanguages = {\n  en: { endonym: 'English' },\n  es: { endonym: 'Español' },\n  fr: { endonym: 'Français' },\n};\n\nclass Settings extends ModalComponent {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            share: getData(\"shareStyle\", \"text\"),\n        }\n        this.changeShareStyle = this.changeShareStyle.bind(this);\n    }\n\n    getTitle() {\n        return this.props.t(\"titles.settings\");\n    }\n\n    changeShareStyle(event) {\n        let style = event.target.value;\n        setData('shareStyle', style);\n        this.setState({share: style});\n    }\n\n    contents() {\n        const t = this.props.t;\n        const i18n = this.props.i18n;\n        const guesses = []; // TODO\n        const guessing = guesses && guesses.length < 6 && guesses.filter(g => g.hint.language).length === 0;\n        const scoring = guessing || !guesses;\n\n        const languageChoices = Object.keys(siteLanguages).map(lang=>\n            <li key={lang}><label>\n                <input type=\"radio\" name=\"language\" value={lang}\n                       checked={i18n.resolvedLanguage === lang}\n                       onChange={(e) => {\n                           if (e.target.checked) {\n                               i18n.changeLanguage(lang)\n                           }\n                       }}\n                />\n                {siteLanguages[lang].endonym}\n            </label></li>\n        )\n\n        return (<div>\n            <fieldset>\n                <legend>{t(\"settings.sharing\")}</legend>\n                <span>{scoring ? \"\" : t(\"settings.shareHint\")}</span>\n                <ul>\n                    <li><label><input type=\"radio\" name=\"style\" value=\"text\"\n                                      onChange={this.changeShareStyle}\n                                      disabled={!scoring}\n                                      checked={this.state.share === \"text\"}/>\n                        {t(\"settings.shareText\")}\n                    </label></li>\n                    <li><label><input type=\"radio\" name=\"style\" value=\"spoiler\"\n                                      onChange={this.changeShareStyle}\n                                      disabled={!scoring}\n                                      checked={this.state.share === \"spoiler\"}/>\n                        {t(\"settings.shareSpoilers\")}\n                    </label></li>\n                    <li><label><input type=\"radio\" name=\"style\" value=\"image\"\n                                      onChange={this.changeShareStyle}\n                                      disabled={!scoring}\n                                      checked={this.state.share === \"image\"}/>\n                        {t(\"settings.shareImage\")}\n                    </label></li>\n                </ul>\n            </fieldset>\n            <br/>\n            <fieldset>\n                <legend>{t(\"settings.language\")}</legend>\n                <ul>\n                    {languageChoices}\n                </ul>\n                <p>{t(\"settings.languageDisclaimer\")}</p>\n                <p>{t(\"settings.languageExplanation\")}</p>\n            </fieldset>\n        </div>)\n    }\n}\n\nexport default withTranslation()(Settings);\n","import React from \"react\";\nimport {getData} from \"./utils\";\nimport ModalComponent from \"./ModalComponent\";\nimport {withTranslation} from \"react-i18next\";\n\nclass Statistics extends ModalComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        const scores = getData('scores') || {};\n        this.games = Object.keys(scores).length;\n        this.wins = 0;\n        this.maxScore = 0;\n        this.scores = {};\n        const self = this;\n\n        // Calculate streaks\n        this.cStreak = 0;\n        this.mStreak = 0;\n\n        Object.values(scores).forEach(function (s, i) {\n            let won = s !== 'X';\n            if (won) {\n                s = parseInt(s);\n            }\n            let c = self.scores[s] || 0;\n            self.scores[s] = c + 1;\n            self.maxScore = Math.max(self.maxScore, self.scores[s]);\n            if (won) {\n                self.wins += 1;\n            }\n            if (s === 'X') {\n                self.cStreak = 0;\n            } else {\n                self.cStreak += 1;\n            }\n            self.mStreak = Math.max(self.cStreak, self.mStreak);\n        });\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    getTitle() {\n        return this.props.t(\"titles.stats\");\n    }\n\n    contents() {\n        const t = this.props.t;\n        let distribution = <h4>{t('stats.empty')}</h4>;\n        if (Object.keys(this.scores).length > 0) {\n            const scores = [1, 2, 3, 4, 5, 6]\n                .map(s => this.scores[s] || 0)\n                .map((s, i) =>\n                    <li style={{width: (s / this.maxScore * 100) + '%'}} key={i}\n                        aria-label={t('stats.graphLabelA', {count: s}) + t('stats.graphLabelB', {count: i+1})}>\n                        <div className=\"GraphLabel\" aria-hidden=\"true\">{s}</div>\n                    </li>\n                );\n            distribution = (\n                <ol className=\"Distribution\" aria-label={t('stats.distribution')}>\n                    {scores}\n                </ol>\n            )\n        }\n        return (\n            <div>\n                <div className=\"StatsList\">\n                    <div className=\"StatBox\">\n                        <span className=\"Stat\">{this.games}</span>\n                        <span className=\"StatLabel\">{t(\"stats.games\")}</span>\n                    </div>\n                    <div className=\"StatBox\">\n                        <span className=\"Stat\">{this.wins}</span>\n                        <span className=\"StatLabel\">{t(\"stats.wins\")}</span>\n                    </div>\n                    <div className=\"StatBox\">\n                        <span className=\"Stat\">{this.cStreak}</span>\n                        <span className=\"StatLabel\">{t(\"stats.thisStreak\")}</span>\n                    </div>\n                    <div className=\"StatBox\">\n                        <span className=\"Stat\">{this.mStreak}</span>\n                        <span className=\"StatLabel\">{t(\"stats.maxStreak\")}</span>\n                    </div>\n                </div>\n                <h2>{t(\"stats.distribution\")}</h2>\n                <hr/>\n                {distribution}\n            </div>\n        )\n    }\n}\n\nexport default withTranslation()(Statistics);","import React from 'react'\nimport {withTranslation} from \"react-i18next\";\n\nimport ServerComponent from \"./ServerComponent\";\nimport Passage from \"./Passage\";\nimport Guesses from \"./Guesses\";\n\nimport './App.css';\nimport Info from \"./Info\";\nimport HowTo from \"./HowTo\";\nimport Settings from \"./Settings\";\nimport Statistics from \"./Statistics\";\n\nclass App extends ServerComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            puzzle: {\n                lines: [\n                    \"Welcome to Novle!\"\n                ]\n            },\n            modal: null,\n        }\n\n        this.openInfo = this.openInfo.bind(this);\n        this.openHelp = this.openHelp.bind(this);\n        this.openSettings = this.openSettings.bind(this);\n        this.openStats = this.openStats.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    openInfo() {\n        this.setState({modal: \"info\"});\n    }\n\n    openHelp() {\n        this.setState({modal: \"help\"});\n    }\n\n    openSettings() {\n        this.setState({modal: \"settings\"});\n    }\n\n    openStats() {\n        this.setState({modal: \"stats\"});\n    }\n\n    closeModal() {\n        this.setState({modal: null});\n    }\n\n    render() {\n        let t = this.props.t;\n        let font = \"\";\n        return (\n            <div className=\"Container\">\n                {font}\n                <div className=\"MainColumn\" aria-hidden={this.state.modal ? \"true\" : \"false\"}>\n                    <div className=\"Buffer\"/>\n                    <div className=\"ContentWrapper\">\n                        <header className=\"Header\">\n                            <span className=\"IconSet Left\">\n                                <button className=\"Help Icon TipBelow\" title={t(\"titles.how-to\")} onClick={this.openHelp}>\n                                    <i className=\"fa-solid fa-circle-question\"></i>\n                                </button>\n                                <button className=\"Info Icon TipBelow\" title={t(\"titles.credits\")} onClick={this.openInfo}>\n                                    <i className=\"fa-solid fa-circle-info\"></i>\n                                </button>\n                            </span>\n                            <h1>Novle</h1>\n                            <span className=\"IconSet Right\">\n                                <button className=\"Settings Icon TipBelow\" title={t(\"titles.settings\")} onClick={this.openSettings}>\n                                    <i className=\"fa-solid fa-gear\"></i>\n                                </button>\n                                <button className=\"Stats Icon TipBelow\" title={t(\"titles.score\")} onClick={this.openStats}>\n                                    <i className=\"fa-solid fa-square-poll-horizontal\"></i>\n                                </button>\n                            </span>\n                        </header>\n                        <Passage lines={this.state.puzzle.lines}/>\n                        <div className=\"Body\">\n                            <Guesses puzzle={this.state.puzzle} key={this.state.puzzle.order}/>\n                        </div>\n                    </div>\n                </div>\n                <Info on={this.state.modal === \"info\"} onClose={this.closeModal}/>\n                <HowTo on={this.state.modal === \"help\"} onClose={this.closeModal}/>\n                <Settings on={this.state.modal === \"settings\"} word={this.state.word} onClose={this.closeModal}/>\n                <Statistics on={this.state.modal === \"stats\"} onClose={this.closeModal}/>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.fetch(\"/today.json?tz=\" + new Date().getTimezoneOffset(),\n            (result) => {\n                this.setState({\n                    puzzle: result,\n                });\n            });\n    }\n}\n\nexport default withTranslation()(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\n\ni18n\n  // i18next-http-backend\n  // loads translations from your server\n  // https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    debug: true,\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n// new usage\n// i18n.services.formatter.add('DATE_HUGE', (value, lng, options) => {\n//   return DateTime.fromJSDate(value).setLocale(lng).toLocaleString(DateTime.DATE_HUGE)\n// });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}