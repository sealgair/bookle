{"version":3,"sources":["ServerComponent.js","Passage.js","utils.js","Canvas.js","Share.js","Lookup.js","Guesses.js","ModalComponent.js","Info.js","HowTo.js","Settings.js","Statistics.js","App.js","reportWebVitals.js","i18n.js","index.js"],"names":["ServerComponent","_React$Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","server","crossDomain","fetch","bind","_assertThisInitialized","_inherits","_createClass","key","value","_fetch","_x","_x2","_x3","apply","arguments","toString","url","success","fail","headers","Content-Type","then","res","json","result","error","console","log","React","Component","sanitizeHtml","require","Passage","context","state","guesses","_this2","document","addEventListener","event","setState","detail","count","_this3","lines","map","line","i","createElement","className","dangerouslySetInnerHTML","__html","allowedTags","allowedAttributes","withTranslation","cssVar","name","getComputedStyle","body","getPropertyValue","isTouchOnly","window","matchMedia","matches","removeDiacritics","text","normalize","replace","setData","localStorage","setItem","JSON","stringify","getData","def","getItem","parse","_unused","Canvas","canvas","createRef","image","current","getContext","draw","src","toDataURL","_this$props","rest","_objectWithoutProperties","Object","assign","ref","alt","title","style","width","height","Share","shareName","baseShareName","options","scoreImage","toggleOptions","shareScore","getScore","getOpener","makeScore","makeScoreImage","makeScoreDescription","alertShare","setTextStyle","setSpoilerStyle","setImageStyle","setStyle","t","prev","newName","setTimeout","puzzle","order","newline","opener","trim","concat","score","ctx","y","fillStyle","fillRect","font","fillText","off","maxWidth","words","split","currentLine","length","word","measureText","push","getLines","ox","forEach","boxColors","_defineProperty","strokeStyle","x","guess","size","hint","author","book","translate","s","lineWidth","h","beginPath","moveTo","lineTo","stroke","drawCheck","year","scale","closePath","fill","drawArrow","setTransform","URL","description","num","join","pubyear","wrong","scoreCard","splice","data","navigator","share","r","clipboard","writeText","alert","prevProps","prevState","snapshot","opacity","Math","max","children","scrollHeight","shareClass","instructions","role","aria-label","tabIndex","autoFocus","onClick","aria-hidden","aria-live","Trans","i18nKey","Lookup","_ServerComponent","selected","books","handleKeypress","handleChange","handleSelect","selectBook","handleBlur","loadBooks","filteredBooks","bcount","code","guessId","target","onSelect","id","textContent","rd","patterns","RegExp","filter","reduce","p","pat","alternate_titles","match","authors","answer","b","bookName","type","disabled","filtered","self","list","classes","aria-selected","htmlFor","placeholder","aria-controls","aria-autocomplete","aria-expanded","aria-activedescendant","onBlur","onChange","onKeyDown","HINTS","Guesses","done","Array","isArray","dispatchGuess","guessing","handleKey","makeGuess","classList","contains","preventDefault","customEvent","CustomEvent","dispatchEvent","params","URLSearchParams","sid","mapGuess","scores","n","lookup","button","ModalComponent","on","close","contents","onClose","inClass","element","parentElement","getTitle","Info","_ModalComponent","href","rel","HowTo","siteLanguages","en","endonym","es","fr","Settings","changeShareStyle","i18n","scoring","g","language","languageChoices","keys","lang","checked","resolvedLanguage","e","changeLanguage","Statistics","games","wins","maxScore","cStreak","mStreak","values","won","parseInt","c","distribution","App","modal","openInfo","openHelp","openSettings","openStats","closeModal","Date","getTimezoneOffset","reportWebVitals","onPerfEntry","Function","__webpack_require__","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","LanguageDetector","initReactI18next","init","debug","fallbackLng","interpolation","escapeValue","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.64cffe6c.chunk.js","sourcesContent":["import React from \"react\";\n\n\nclass ServerComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n            // development build code\n            this.server = props.server || \"http://\" + window.location.host.split(':')[0] + \":8000\";\n            this.crossDomain = true;\n        } else {\n            // production build code\n            this.server = props.server || \"\";\n            this.crossDomain = false;\n        }\n        this.fetch = this.fetch.bind(this);\n    }\n\n  fetch(url, success, fail) {\n    let headers = {};\n    if (this.crossDomain) {\n      headers = {\n        crossDomain: true,\n        headers: {'Content-Type': 'application/json'},\n      };\n    }\n    fetch(this.server + url, headers)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          success(result)\n        },\n        (error) => {\n          if (fail) {\n            fail(error);\n          } else {\n            console.log(error);\n          }\n        }\n      );\n  }\n}\n\nexport default ServerComponent;\n","import React from \"react\";\nimport {withTranslation} from \"react-i18next\";\nconst sanitizeHtml = require('sanitize-html');\n\nclass Passage extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            guesses: 0\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('guess', event => this.setState({'guesses': event.detail.count}));\n    }\n\n    render() {\n        const lines = this.props.lines.map((line, i)=>\n            <span className={\"line\" + (i <= this.state.guesses ? \" shown\" : \"\")} key={i} dangerouslySetInnerHTML={{\n                __html: sanitizeHtml(line, {\n                    allowedTags: ['em'],\n                    allowedAttributes: []\n                })\n            }}>\n            </span>\n        );\n        return (\n            <div className=\"PhraseContainer\">\n                {lines}\n            </div>\n        )\n    }\n}\n\nexport default withTranslation()(Passage);","function compare(a, b) {\n    if (a < b) {\n        return -1;\n    } else if (a > b) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nfunction randomInt(r, f) {\n    f = f || 0;\n    return Math.floor(Math.random() * r) + f\n}\n\nfunction randomChoice(arr) {\n    return arr[randomInt(arr.length)];\n}\n\nfunction cssVar(name) {\n    return getComputedStyle(document.body).getPropertyValue(name);\n}\n\nfunction isTouchOnly() {\n    return window.matchMedia(\"(any-hover: none)\").matches;\n}\n\nfunction isLightMode() {\n    return window.matchMedia(\"(prefers-color-scheme: light)\").matches;\n}\n\nfunction escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nfunction removeDiacritics(text) {\n    return text.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n\nfunction setData(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n}\n\nfunction getData(key, def) {\n    let value = localStorage.getItem(key);\n    try {\n        value = JSON.parse(value);\n    } catch {\n    }\n    if (value === null) {\n        value = def;\n    }\n    return value;\n}\n\nfunction inClass(element, className) {\n    if (element.classList.contains(className)) {\n        return true;\n    }\n    if (element.parentElement) {\n        return inClass(element.parentElement, className);\n    }\n    return false;\n}\n\nfunction getLines(ctx, text, off) {\n    const maxWidth = ctx.canvas.width - off;\n    const words = text.split(\" \");\n    let lines = [];\n    let currentLine = words[0];\n\n    for (let i = 1; i < words.length; i++) {\n        const word = words[i];\n        const width = ctx.measureText(currentLine + \" \" + word).width;\n        if (width < maxWidth) {\n            currentLine += \" \" + word;\n        } else {\n            lines.push(currentLine);\n            currentLine = word;\n        }\n    }\n    lines.push(currentLine);\n    return lines;\n}\n\nfunction drawArrow(ctx, s) {\n    const h = (s / 2);\n    ctx.beginPath();\n    ctx.moveTo(0, -h);\n    ctx.lineTo(-h, 0);\n    ctx.lineTo(-h/2, 0);\n    ctx.lineTo(-h/2, h);\n    ctx.lineTo(h/2, h);\n    ctx.lineTo(h/2, 0);\n    ctx.lineTo(h, 0);\n    ctx.closePath();\n    ctx.fill();\n}\n\nfunction drawCheck(ctx, s) {\n    ctx.lineWidth = 4;\n    const h = (s / 2);\n    ctx.beginPath();\n    ctx.moveTo(-h, 0);\n    ctx.lineTo(-2, h-2);\n    ctx.lineTo(h, -h);\n    ctx.stroke();\n}\n\nexport {\n    getLines,\n    drawArrow,\n    drawCheck,\n    compare,\n    randomInt,\n    randomChoice,\n    cssVar,\n    isTouchOnly,\n    isLightMode,\n    escapeRegExp,\n    removeDiacritics,\n    setData,\n    getData,\n    inClass\n}","import React from \"react\";\n\nclass Canvas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.canvas = React.createRef();\n        this.image = React.createRef();\n    }\n\n    componentDidMount() {\n        const context = this.canvas.current.getContext('2d');\n        this.props.draw(context);\n        this.image.current.src = this.canvas.current.toDataURL();\n    }\n\n    render() {\n        const {draw, ...rest} = this.props;\n        return <div className=\"CanvasContainer\">\n            <canvas ref={this.canvas} className=\"Hide\" {...rest}/>\n            <img ref={this.image} alt={this.props.title} style={{\n                width: this.props.width, height: this.props.height\n            }}/>\n        </div>;\n    }\n}\n\nexport default Canvas;\n","import React from \"react\";\nimport {cssVar, getData, isLightMode, isTouchOnly, setData, getLines, drawArrow, drawCheck} from \"./utils\";\nimport Canvas from \"./Canvas\";\nimport {withTranslation, Trans} from \"react-i18next\";\n\nclass Share extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            style: getData(\"shareStyle\", \"text\"),\n            shareName: this.baseShareName(),\n            options: false,\n        };\n        this.options = React.createRef();\n        this.scoreImage = React.createRef();\n        this.toggleOptions = this.toggleOptions.bind(this);\n        this.shareScore = this.shareScore.bind(this);\n        this.getScore = this.getScore.bind(this);\n        this.getOpener = this.getOpener.bind(this);\n        this.makeScore = this.makeScore.bind(this);\n        this.makeScoreImage = this.makeScoreImage.bind(this);\n        this.makeScoreDescription = this.makeScoreDescription.bind(this);\n        this.alertShare = this.alertShare.bind(this);\n        this.setTextStyle = this.setTextStyle.bind(this);\n        this.setSpoilerStyle = this.setSpoilerStyle.bind(this);\n        this.setImageStyle = this.setImageStyle.bind(this);\n        this.setStyle = this.setStyle.bind(this);\n    }\n\n    baseShareName() {\n        const t = this.props.t;\n        const style = getData(\"shareStyle\", \"text\");\n        return style === \"image\" ? t(\"buttons.copyAlt\") : t(\"buttons.share\");\n    }\n\n    toggleOptions() {\n        this.setState(prev => ({options: !prev.options}));\n    }\n\n    alertShare(newName) {\n        this.setState({shareName: newName});\n        setTimeout(() => this.setState({shareName: this.baseShareName()}), 3000);\n    }\n\n    getScore() {\n        const scores = getData('scores');\n        return scores[this.props.puzzle.order];\n    }\n\n    getOpener(newline) {\n        let opener = this.props.puzzle.lines[0].trim();\n        if (!newline) {\n            opener = opener.replace(/\\s*\\n\\s*/g, '/ ');\n        }\n        opener = opener.replace(/\\s*<\\/?em>\\s*/g, '');\n        return `\"${opener.trim()}\"`;\n    }\n\n    makeScoreImage() {\n        const score = this.getScore();\n        const title = `Novle #${this.props.puzzle.order}: ${score}/6`;\n        let opener = this.getOpener(true);\n        const guesses = this.props.guesses;\n        const size = 30;\n        const ox = 10;\n        const ix = 10;\n        const oy = 30;\n        const ly = 10;\n        return <Canvas draw={function (ctx) {\n            let y = oy;\n            ctx.fillStyle = cssVar('--bg-color');\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n            ctx.fillStyle = cssVar('--text-color');\n            ctx.font = '25px';\n            ctx.fillText(title, ox, y);\n            y += 30;\n            ctx.font = '25px';\n            getLines(ctx, opener, ox * 2).forEach(function (line, i) {\n                ctx.fillText(line, ox * 2, y);\n                y += 20\n            });\n\n            const boxColors = {\n                [true]: cssVar('--almost-color'),\n                [false]: cssVar('--incorrect-color'),\n            }\n            ctx.strokeStyle = cssVar('--text-color');\n            let x = ox + ix;\n            guesses.forEach(function (guess, i) {\n                ctx.fillStyle = cssVar('--text-color');\n                ctx.fillRect(x-2, y-2, size+4, size+4);\n                ctx.fillStyle = boxColors[guess.hint.author];\n                ctx.fillRect(x, y, size, size);\n\n                if (guess.hint.book) {\n                    ctx.font = '18px mono';\n                    ctx.fillStyle = cssVar('--correct-color');\n                    ctx.fillRect(x, y, size, size);\n                    ctx.translate(x + size / 2, y + size / 2);\n                    drawCheck(ctx, size - 10);\n                } else {\n                    ctx.fillRect(x, y, size, size);\n                    ctx.fillStyle = cssVar('--text-color');\n                    ctx.translate(x + size / 2, y + size / 2);\n                    if (guess.hint.year === -1) {\n                        ctx.scale(1, -1);\n                    }\n                    drawArrow(ctx, size - 10);\n                }\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                x += size + 8;\n            });\n            y += size + ly;\n\n            ctx.fillStyle = cssVar('--text-color');\n            ctx.font = '20px';\n            ctx.fillText(document.URL, ox, y + 20);\n        }} width={(size + 1) * 6 + (ox + ix) * 2} height={(size + ly) * (guesses.length) + 70 + oy + ly}\n                       title={this.makeScoreDescription()}/>\n    }\n\n    makeScoreDescription() {\n        const t = this.props.t;\n        let description = [t('share.alt.title', {num: this.props.puzzle.order})];\n        description.push(this.getOpener());\n        const score = this.getScore();\n        if (this.props.success) {\n            description.push(t(\"share.alt.score\", {count: score}));\n        } else {\n            description.push(t(\"share.alt.miss\"));\n        }\n        this.props.guesses.forEach(function (guess, i) {\n            let line = t('share.alt.guessTitle', {num: i + 1});\n            if (guess.hint.book) {\n                line += t('share.alt.guessRight');\n            } else {\n                line += t('share.alt.author', {context: guess.hint.author ? 'right' : 'wrong'}) + ', ';\n                line += t('share.alt.year', {context: {[-1]: 'early', 0: 'right', 1: 'late'}[guess.hint.year]});\n            }\n            description.push(line);\n        });\n        description.push(t('share.alt.link', {url: document.URL}));\n        return description.join(\"\\n\");\n    }\n\n    makeScore() {\n        const style = this.state.style;\n        const score = this.getScore();\n        const title = `#Novle #${this.props.puzzle.order}: ${score}/6\\n${this.getOpener()}`;\n        if (style === \"image\") {\n            return this.makeScoreImage();\n        }\n\n        const pubyear = {\n            [-1]: '⬇️️',\n            0: '✅',\n            1: '⬆️'\n        }\n        const right = '🟩';\n        const almost = '🟧';\n        const wrong = isLightMode() ? '⬜' : '⬛';\n        let scoreCard = [];\n        if (style === \"spoiler\") {\n            scoreCard = this.props.guesses.map(function (guess) {\n                if (guess.hint.book) {\n                    return right+pubyear[0];\n                } else {\n                    let hint = [];\n                    if (guess.hint.author) {\n                        hint.push(almost);\n                    } else {\n                        hint.push(wrong);\n                    }\n                    hint.push(pubyear[guess.hint.year]+' ');\n                    hint.push(\" ||`\" + guess.book + \"`||\")\n                    return hint.join(\"\");\n                }\n            });\n        } else {\n            let score = \"📖 \" + this.props.guesses.map(function (guess) {\n                if (guess.hint.book) {\n                    return right+pubyear[0];\n                } else {\n                    return (guess.hint.author ? almost : wrong) + pubyear[guess.hint.year]\n                }\n            }).join(\" \");\n            scoreCard = [score];\n        }\n        scoreCard.splice(0, 0, title);\n        scoreCard.push(document.URL);\n        return scoreCard.join(\"\\n\");\n    }\n\n    shareScore() {\n        let data = this.makeScore();\n        if (this.state.style === \"image\") {\n            data = this.makeScoreDescription();\n        }\n        if (isTouchOnly() && this.state.style !== \"image\" && navigator.share) {\n            navigator.share({\n                title: \"Novle\",\n                text: data,\n            }).then(r => this.alertShare(\"Shared\"));\n        } else if (navigator.clipboard) {\n            navigator.clipboard.writeText(data).then(r => this.alertShare(\"Copied\"));\n        } else {\n            alert(\"Could not copy to clipboard, copy manually here:\\n\\n\" + data);\n        }\n    }\n\n    setStyle(style) {\n        setData(\"shareStyle\", style)\n        this.setState({\n            style: style,\n            shareName: this.baseShareName(),\n        });\n    }\n\n    setTextStyle() {\n        this.setStyle(\"text\");\n    }\n\n    setSpoilerStyle() {\n        this.setStyle(\"spoiler\");\n    }\n\n    setImageStyle() {\n        this.setStyle(\"image\");\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        let height = 0;\n        let opacity = 0;\n        if (this.state.options) {\n            height = Math.max(\n                this.options.current.children[0].scrollHeight + 10,\n                this.options.current.children[1].scrollHeight,\n            ) + 'px';\n            opacity = 1;\n        }\n        this.options.current.style = \"height: \" + height + \"; opacity: \" + opacity + \";\";\n        if (this.scoreImage.current) {\n            height = 0;\n            opacity = 0;\n            if (!this.state.options) {\n                height = this.scoreImage.current.scrollHeight + 'px';\n                opacity = 1;\n            }\n            this.scoreImage.current.style = \"height: \" + height + \"; opacity: \" + opacity + \";\";\n        }\n    }\n\n    render() {\n        const t = this.props.t;\n        let shareClass = \"Guess Share\";\n        if (!this.props.success) {\n            shareClass += \" Fail\";\n        }\n        let instructions = \"\";\n        let image = \"\";\n        if (this.state.style === \"image\") {\n            instructions = t(\"share.instructions\", {\n                \"context\": isTouchOnly() ? \"tap\" : \"click\"\n            })\n            image = (<div className=\"ScoreImage Foldable\" ref={this.scoreImage}>\n                {this.makeScoreImage()}\n            </div>)\n        }\n        let score = this.makeScore();\n        if (this.state.style !== \"image\") {\n            score = <pre role=\"img\" aria-label={t(\"share.description\")}>{score}</pre>;\n        }\n        return <div className=\"ShareBox\">\n            <button tabIndex=\"0\" autoFocus className={shareClass}\n                    onClick={this.shareScore}>{this.state.shareName}</button>\n            <div className=\"ShareData Foldable\" ref={this.options} aria-hidden={this.state.options ? \"false\" : \"true\"}\n                 style={{height: 0, opacity: 0}} aria-live=\"polite\">\n                <div className=\"ShareOptions\" aria-label={t(\"share.styleChoice\")}>\n                    <button className={\"ShareOption\" + ((this.state.style === \"text\") ? \" Selected\" : \"\")}\n                            onClick={this.setTextStyle}>{t(\"share.textStyle\")}\n                    </button>\n                    <button className={\"ShareOption\" + ((this.state.style === \"spoiler\") ? \" Selected\" : \"\")}\n                            onClick={this.setSpoilerStyle}>{t(\"share.spoilerStyle\")}\n                    </button>\n                    <button className={\"ShareOption\" + ((this.state.style === \"image\") ? \" Selected\" : \"\")}\n                            onClick={this.setImageStyle}>{t(\"share.imageStyle\")}\n                    </button>\n                </div>\n                <div className=\"ShareContent\" aria-live=\"polite\">\n                    {instructions}\n                    {score}\n                </div>\n            </div>\n            {image}\n            <button className=\"ToggleShareOptions\" onClick={this.toggleOptions}>\n                <Trans i18nKey=\"share.options\">Share<br/>Options</Trans>\n            </button>\n        </div>;\n    }\n}\n\nexport default withTranslation()(Share);","import ServerComponent from \"./ServerComponent\";\nimport {escapeRegExp, removeDiacritics} from \"./utils\";\nimport {withTranslation} from \"react-i18next\";\nimport React from \"react\";\n\nclass Lookup extends ServerComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            selected: 0,\n            books: []\n        };\n\n        this.handleKeypress = this.handleKeypress.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.selectBook = this.selectBook.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.loadBooks = this.loadBooks.bind(this);\n    }\n\n    handleKeypress(event) {\n        let selected = this.state.selected;\n        let books = this.filteredBooks();\n        let bcount = books.length;\n\n        if (event.code === \"ArrowDown\") {\n            if (selected === null) {\n                selected = bcount - 1;\n            } else {\n                selected -= 1;\n            }\n            if (selected < 0) {\n                selected = null;\n            }\n        } else if (event.code === \"ArrowUp\") {\n            if (selected === null) {\n                selected = 0;\n            } else {\n                selected += 1;\n            }\n            if (selected >= bcount) {\n                selected = null;\n            }\n        }\n        if (event.code === \"Enter\") {\n            if (selected === null) {\n                selected = 0;\n            } else {\n                let book = books[selected];\n                this.selectBook(book);\n            }\n        }\n        this.setState({selected: selected});\n    }\n\n    handleChange(event) {\n        this.guessId = null;\n        this.setState({value: event.target.value, selected: null});\n        this.props.onSelect();\n    }\n\n    handleSelect(event) {\n        this.selectBook({id: event.target.value, title: event.target.textContent});\n    }\n\n    handleBlur(event) {\n    }\n\n    selectBook(book) {\n        if (book) {\n            this.guessId = book.id;\n            this.setState({value: book.title});\n            this.props.onSelect(book);\n        }\n    }\n\n    filteredBooks() {\n        const rd = removeDiacritics;\n        const query = rd(this.state.value);\n        const patterns = query.split(\" \").map(t => new RegExp('\\\\b' + escapeRegExp(t), 'gi'));\n        return this.state.books.filter(book => patterns.reduce(\n            (p, pat) => p && (rd(book.title + ' ' + book.alternate_titles).match(pat) || rd(book.authors.join(' ')).match(pat)),\n            true\n        ));\n    }\n\n    bookName(book, year) {\n        if (year) {\n            return `${book.title} (${book.authors.join(', ')}, ${book.year})`;\n        } else {\n            return `${book.title} (${book.authors.join(', ')})`;\n        }\n    }\n\n    render() {\n        if (this.props.answer) {\n            let answer = this.state.books.filter(b => b.id === this.props.answer);\n            if (answer.length === 1) {\n                answer = this.bookName(answer[0], true);\n            } else {\n                answer = \"\";\n            }\n            return <div className=\"LookupWrapper\" aria-live=\"polite\">\n                <input type=\"text\" className=\"Guess Lookup\" aria-label=\"correct answer\"\n                       disabled value={answer}/>\n            </div>;\n        }\n\n        let filtered = \"\";\n        let selected = null;\n        if (!this.guessId && this.state.value) {\n            const self = this;\n            let list = this.filteredBooks().map(function (book, i) {\n                let classes = \"Book\";\n                if (i === self.state.selected) {\n                    classes += \" Selected\";\n                    selected = book;\n                }\n                return (\n                    <li className={classes} key={book.id} value={book.id} role=\"option\" aria-selected={self.state.selected}\n                        onClick={self.handleSelect} id={\"book-\" + book.id}>\n                        {self.bookName(book)}\n                    </li>);\n            });\n            filtered = (\n                <ul className=\"BookList\" id=\"books\" aria-label=\"books\" role=\"listbox\">\n                    {list}\n                </ul>\n            )\n        }\n        const t = this.props.t;\n        return (\n            <div className=\"LookupWrapper\">\n                <label className=\"Hidden\" htmlFor=\"guess-lookup\">{t(\"lookup.description\")}</label>\n                <input id=\"guess-lookup\" type=\"text\" className=\"Guess Lookup\" autoFocus role=\"combobox\"\n                       placeholder={t(\"lookup.prompt\")} value={this.state.value}\n                       aria-controls=\"Books\"\n                       aria-autocomplete=\"list\"\n                       aria-expanded={filtered ? \"true\" : \"false\"}\n                       aria-activedescendant={selected ? \"Book-\" + selected.id : \"none\"}\n                       onBlur={this.handleBlur}\n                       onChange={this.handleChange} onKeyDown={this.handleKeypress}/>\n                {filtered}\n            </div>\n        )\n    }\n\n    componentWillUnmount() {\n        this.state.books = [];\n    }\n\n    loadBooks() {\n        this.fetch(\"/books.json\",\n            (result) => {\n                this.setState({\n                    books: result\n                })\n            }\n        );\n    }\n\n    componentDidMount() {\n        this.loadBooks();\n    }\n}\n\nexport default withTranslation()(Lookup);\n","import ServerComponent from \"./ServerComponent\";\nimport {getData, setData} from \"./utils\";\nimport Share from \"./Share\";\nimport React from \"react\";\nimport Lookup from \"./Lookup\";\nimport {withTranslation} from \"react-i18next\";\n\nconst HINTS = {\n    [-1]: 'fa-arrow-down',\n    1: 'fa-arrow-up',\n    0: 'fa-check',\n    [true]: 'fa-check',\n    [false]: 'fa-xmark',\n}\n\nclass Guesses extends ServerComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        let done = false;\n        let success = false;\n        let guesses = [];\n        if (this.props.puzzle) {\n            let data = getData('guess' + this.props.puzzle.order);\n            if (Array.isArray(data)) {\n                guesses = data;\n                success = guesses[guesses.length - 1].success;\n                done = success || guesses.length >= 6;\n                if (done) {\n                    this.dispatchGuess(6);\n                } else {\n                    this.dispatchGuess(guesses.length);\n                }\n            }\n        }\n        this.state = {\n            guess: null,\n            guesses: guesses,\n            guessing: false,\n            done: done,\n            success: success,\n        };\n        this.onSelect = this.onSelect.bind(this);\n        this.handleKey = this.handleKey.bind(this);\n        this.makeGuess = this.makeGuess.bind(this);\n    }\n\n    onSelect(guess) {\n        this.setState({\n            guess: guess,\n            done: guess ? guess.success : false,\n        });\n    }\n\n    handleKey(event) {\n        if (this.state.guess && event.code === \"Enter\" && event.target.classList.contains(\"Lookup\")) {\n            this.makeGuess();\n            event.preventDefault();\n        }\n    }\n\n    dispatchGuess(count) {\n        const customEvent = new CustomEvent('guess', { detail: { count: count } });\n        document.dispatchEvent(customEvent);\n    }\n\n    makeGuess() {\n        if (this.state.guessing) {\n            return;\n        }\n        const params = new URLSearchParams({\n            book: this.state.guess.id,\n            puzzle: this.props.puzzle.id,\n        }).toString();\n        this.setState({'guessing': true});\n        this.fetch(\"/guess.json?\" + params,\n            (result) => {\n                let guesses = this.state.guesses;\n                guesses.push(result);\n                let done = result.success || guesses.length >= 6;\n                this.setState({\n                    guesses: guesses,\n                    guessing: false,\n                    done: done,\n                    success: result.success,\n                    guess: null,\n                    sid: result.sid,\n                    mapGuess: null,\n                });\n                if (done) {\n                    this.dispatchGuess(6);\n                } else {\n                    this.dispatchGuess(guesses.length);\n                }\n\n                if (this.props.puzzle.order) {\n                    setData('guess' + this.props.puzzle.order, this.state.guesses);\n                    if (done) {\n                        let scores = getData('scores') || {};\n                        let score;\n                        if (result.success) {\n                            score = guesses.length;\n                        } else {\n                            score = 'X';\n                        }\n                        scores[this.props.puzzle.order] = score;\n                        setData('scores', scores);\n                    }\n                }\n            },\n            (error) => {\n                this.setState({guessing: false});\n            }\n        );\n    }\n\n    render() {\n        const t = this.props.t;\n\n        const numbers = [0, 1, 2, 3, 4, 5];\n        const guesses = numbers.map(n => this.state.guesses[n] || false);\n        const data = guesses.map(function (guess, n) {\n            if (guess) {\n                return (<li className=\"Guess Hints\" key={n}>\n                    <div className=\"author hint\">\n                        <div className='wrapper'>\n                            {guess.authors.map((author, i) => <div className=\"author\" key={i}>{author}</div>)}\n                        </div>\n                        <i className={`icon fa-solid ${HINTS[guess.hint.author]}`}></i>\n                    </div>\n                    <div className=\"bookTitle hint\">\n                        <div className=\"wrapper\">{guess.book}</div>\n                        <i className={`icon fa-solid ${HINTS[guess.hint.book]}`}></i>\n                    </div>\n                    <div className=\"year hint\" title={t('guess.yearHint', {\n                        context: {[-1]: 'early', 0: 'right', 1: 'late'}[guess.hint.year]\n                    })}>\n                        <div className=\"wrapper\">{guess.year}</div>\n                        <i className={`icon fa-solid ${HINTS[guess.hint.year]}`}></i>\n                    </div>\n                </li>);\n            } else {\n                return (<li className=\"Guess Empty\" key={n}/>);\n            }\n        });\n\n        let lookup = \"\";\n        let button = \"\";\n        if (this.state.done) {\n            if (!this.state.success) {\n                lookup = <Lookup key={this.state.guesses.length} answer={this.props.puzzle.book}/>;\n            }\n            button = <Share success={this.state.success} guesses={this.state.guesses}\n                            puzzle={this.props.puzzle}/>;\n        } else {\n            lookup = <Lookup onSelect={this.onSelect} key={this.state.guesses.length}/>;\n            button = <button tabIndex=\"0\" className=\"MakeGuess Guess\" onClick={this.makeGuess}\n                             disabled={this.state.guessing || !this.state.guess}>{t('buttons.guess')}</button>;\n        }\n\n        return <div className=\"GuessWrapper\">\n            <ul className=\"Guesses\">\n                {data}\n            </ul>\n            <div className=\"LookupSection\" onKeyDown={this.handleKey}>\n                {lookup}\n                {button}\n            </div>\n        </div>\n    }\n}\n\nexport default withTranslation()(Guesses);","import React from \"react\";\nimport {inClass} from \"./utils\";\n\nclass ModalComponent extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {on: false};\n        this.close = this.close.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.contents = this.contents.bind(this);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        return {on: props.on};\n    }\n\n    getTitle() {\n        return \"Modal\";\n    }\n\n    close(event) {\n        this.props.onClose(event);\n    }\n\n    onClick(event) {\n        if (inClass(event.target, \"Close\") || event.target.classList.contains(\"Overlay\")) {\n            this.close();\n        }\n    }\n\n    render() {\n        const t = this.props.t || ((s) => s); // needs to be injected in subclasses\n        let opacity = this.state.on ? 1 : 0;\n        let height = this.state.on ? \"100vh\" : 0;\n        return (\n            <div className=\"Overlay\" onClick={this.onClick} style={{\n                opacity: opacity, height: height\n            }} aria-hidden={this.state.on ? \"false\" : \"true\"} aria-live=\"polite\">\n                <div className=\"ModalContainer\">\n                    <h1>{this.getTitle()}</h1>\n                    <hr/>\n                    {this.contents()}\n                    <button className=\"Close Icon\">\n                        <span className=\"Description\">{t('buttons.close')}</span>\n                        <i className=\"fa-solid fa-circle-xmark\"></i>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    contents() {\n    }\n}\n\nexport default ModalComponent;","import React from \"react\";\nimport ModalComponent from \"./ModalComponent\";\nimport {withTranslation} from \"react-i18next\";\n\nclass Info extends ModalComponent {\n    getTitle() {\n        return this.props.t(\"titles.info\");\n    }\n\n    contents() {\n        const t = this.props.t;\n        return <div className=\"InfoContent\">\n            <p>{t(\"info.credit\")}</p>\n            <p>\n                <a href=\"https://github.com/sealgair/lingule\" target=\"_new\">\n                    <i className=\"fa-brands fa-github Icon\"></i>\n                    {t(\"info.code\")}\n                </a>\n            </p>\n            <p>\n                <a href=\"https://bsky.app/profile/chase.caster.quest\" target=\"_new\">\n                    <i className=\"fa-solid fa-square Icon\"></i>\n                    {t(\"info.skeet\")}\n                </a>\n            </p>\n            <p>\n                <a href=\"https://twitter.com/ChaseCaster\" target=\"_new\">\n                    <i className=\"fa-brands fa-twitter Icon\"></i>\n                    {t(\"info.tweet\")}\n                </a>\n            </p>\n            <p>\n                <a rel=\"me\" href=\"https://peoplemaking.games/@chase\" target=\"_new\">\n                    <i className=\"fa-brands fa-mastodon Icon\"></i>\n                    {t(\"info.toot\")}\n                </a>\n            </p>\n            <p>\n                {t(\"info.bugs\")}\n            </p>\n            <hr/>\n            <div className=\"links\">\n                <div className=\"title\">{t(\"info.links\")}</div>\n                <a href=\"https://lingule.xyz\" target=\"_blank\" rel=\"noopener noreferrer\">Lingule</a>\n                <span className=\"description\">{t(\"info.lingule\")}</span>\n            </div>\n        </div>;\n    }\n}\n\nexport default withTranslation()(Info);","import React from \"react\";\nimport ModalComponent from \"./ModalComponent\";\nimport {withTranslation} from \"react-i18next\";\n\nclass HowTo extends ModalComponent {\n    getTitle() {\n        return this.props.t(\"titles.how-to\");\n    }\n\n    contents() {\n        const t = this.props.t;\n        return (\n            <div>\n                <p>{t(\"howto.intro\")}</p>\n                <p>{t(\"howto.afterGuess\")}</p>\n                <div className=\"howTo\">\n                    {t(\"howto.example.phrase\")}\n                    <div className=\"PhraseContainer\">\n                        <span className=\"line shown\">It was the best of times, it was the worst of times,</span>\n                    </div>\n\n                    {t(\"howto.example.guess\")}\n                    <div className=\"GuessWrapper\">\n                        <ul className=\"Guesses\">\n                            <li className=\"Guess Hints\">\n                                <div className=\"author hint\">\n                                    Charles Dickens\n                                    <i className=\"icon fa-solid fa-check\"></i>\n                                </div>\n                                <div className=\"bookTitle hint\">\n                                    Oliver Twist\n                                    <i className=\"icon fa-solid fa-xmark\"></i>\n                                </div>\n                                <div className=\"year hint\">\n                                    1873\n                                    <i className=\"icon fa-solid fa-arrow-up\"></i>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                    {t(\"howto.example.explain\")}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withTranslation()(HowTo);","import {getData, setData} from \"./utils\";\nimport {withTranslation} from \"react-i18next\";\nimport React from \"react\";\nimport ModalComponent from \"./ModalComponent\";\n\nconst siteLanguages = {\n  en: { endonym: 'English' },\n  es: { endonym: 'Español' },\n  fr: { endonym: 'Français' },\n};\n\nclass Settings extends ModalComponent {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            share: getData(\"shareStyle\", \"text\"),\n        }\n        this.changeShareStyle = this.changeShareStyle.bind(this);\n    }\n\n    getTitle() {\n        return this.props.t(\"titles.settings\");\n    }\n\n    changeShareStyle(event) {\n        let style = event.target.value;\n        setData('shareStyle', style);\n        this.setState({share: style});\n    }\n\n    contents() {\n        const t = this.props.t;\n        const i18n = this.props.i18n;\n        const guesses = []; // TODO\n        const guessing = guesses && guesses.length < 6 && guesses.filter(g => g.hint.language).length === 0;\n        const scoring = guessing || !guesses;\n\n        const languageChoices = Object.keys(siteLanguages).map(lang=>\n            <li key={lang}><label>\n                <input type=\"radio\" name=\"language\" value={lang}\n                       checked={i18n.resolvedLanguage === lang}\n                       onChange={(e) => {\n                           if (e.target.checked) {\n                               i18n.changeLanguage(lang)\n                           }\n                       }}\n                />\n                {siteLanguages[lang].endonym}\n            </label></li>\n        )\n\n        return (<div>\n            <fieldset>\n                <legend>{t(\"settings.sharing\")}</legend>\n                <span>{scoring ? \"\" : t(\"settings.shareHint\")}</span>\n                <ul>\n                    <li><label><input type=\"radio\" name=\"style\" value=\"text\"\n                                      onChange={this.changeShareStyle}\n                                      disabled={!scoring}\n                                      checked={this.state.share === \"text\"}/>\n                        {t(\"settings.shareText\")}\n                    </label></li>\n                    <li><label><input type=\"radio\" name=\"style\" value=\"spoiler\"\n                                      onChange={this.changeShareStyle}\n                                      disabled={!scoring}\n                                      checked={this.state.share === \"spoiler\"}/>\n                        {t(\"settings.shareSpoilers\")}\n                    </label></li>\n                    <li><label><input type=\"radio\" name=\"style\" value=\"image\"\n                                      onChange={this.changeShareStyle}\n                                      disabled={!scoring}\n                                      checked={this.state.share === \"image\"}/>\n                        {t(\"settings.shareImage\")}\n                    </label></li>\n                </ul>\n            </fieldset>\n            <br/>\n            <fieldset>\n                <legend>{t(\"settings.language\")}</legend>\n                <ul>\n                    {languageChoices}\n                </ul>\n                <p>{t(\"settings.languageDisclaimer\")}</p>\n                <p>{t(\"settings.languageExplanation\")}</p>\n            </fieldset>\n        </div>)\n    }\n}\n\nexport default withTranslation()(Settings);\n","import React from \"react\";\nimport {getData} from \"./utils\";\nimport ModalComponent from \"./ModalComponent\";\nimport {withTranslation} from \"react-i18next\";\n\nclass Statistics extends ModalComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        const scores = getData('scores') || {};\n        this.games = Object.keys(scores).length;\n        this.wins = 0;\n        this.maxScore = 0;\n        this.scores = {};\n        const self = this;\n\n        // Calculate streaks\n        this.cStreak = 0;\n        this.mStreak = 0;\n\n        Object.values(scores).forEach(function (s, i) {\n            let won = s !== 'X';\n            if (won) {\n                s = parseInt(s);\n            }\n            let c = self.scores[s] || 0;\n            self.scores[s] = c + 1;\n            self.maxScore = Math.max(self.maxScore, self.scores[s]);\n            if (won) {\n                self.wins += 1;\n            }\n            if (s === 'X') {\n                self.cStreak = 0;\n            } else {\n                self.cStreak += 1;\n            }\n            self.mStreak = Math.max(self.cStreak, self.mStreak);\n        });\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    getTitle() {\n        return this.props.t(\"titles.stats\");\n    }\n\n    contents() {\n        const t = this.props.t;\n        let distribution = <h4>{t('stats.empty')}</h4>;\n        if (Object.keys(this.scores).length > 0) {\n            const scores = [1, 2, 3, 4, 5, 6]\n                .map(s => this.scores[s] || 0)\n                .map((s, i) =>\n                    <li style={{width: (s / this.maxScore * 100) + '%'}} key={i}\n                        aria-label={t('stats.graphLabelA', {count: s}) + t('stats.graphLabelB', {count: i+1})}>\n                        <div className=\"GraphLabel\" aria-hidden=\"true\">{s}</div>\n                    </li>\n                );\n            distribution = (\n                <ol className=\"Distribution\" aria-label={t('stats.distribution')}>\n                    {scores}\n                </ol>\n            )\n        }\n        return (\n            <div>\n                <div className=\"StatsList\">\n                    <div className=\"StatBox\">\n                        <span className=\"Stat\">{this.games}</span>\n                        <span className=\"StatLabel\">{t(\"stats.games\")}</span>\n                    </div>\n                    <div className=\"StatBox\">\n                        <span className=\"Stat\">{this.wins}</span>\n                        <span className=\"StatLabel\">{t(\"stats.wins\")}</span>\n                    </div>\n                    <div className=\"StatBox\">\n                        <span className=\"Stat\">{this.cStreak}</span>\n                        <span className=\"StatLabel\">{t(\"stats.thisStreak\")}</span>\n                    </div>\n                    <div className=\"StatBox\">\n                        <span className=\"Stat\">{this.mStreak}</span>\n                        <span className=\"StatLabel\">{t(\"stats.maxStreak\")}</span>\n                    </div>\n                </div>\n                <h2>{t(\"stats.distribution\")}</h2>\n                <hr/>\n                {distribution}\n            </div>\n        )\n    }\n}\n\nexport default withTranslation()(Statistics);","import React from 'react'\nimport {withTranslation} from \"react-i18next\";\n\nimport ServerComponent from \"./ServerComponent\";\nimport Passage from \"./Passage\";\nimport Guesses from \"./Guesses\";\n\nimport './App.css';\nimport Info from \"./Info\";\nimport HowTo from \"./HowTo\";\nimport Settings from \"./Settings\";\nimport Statistics from \"./Statistics\";\n\nclass App extends ServerComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            puzzle: {\n                lines: [\n                    \"Welcome to Novle!\"\n                ]\n            },\n            modal: null,\n        }\n\n        this.openInfo = this.openInfo.bind(this);\n        this.openHelp = this.openHelp.bind(this);\n        this.openSettings = this.openSettings.bind(this);\n        this.openStats = this.openStats.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    openInfo() {\n        this.setState({modal: \"info\"});\n    }\n\n    openHelp() {\n        this.setState({modal: \"help\"});\n    }\n\n    openSettings() {\n        this.setState({modal: \"settings\"});\n    }\n\n    openStats() {\n        this.setState({modal: \"stats\"});\n    }\n\n    closeModal() {\n        this.setState({modal: null});\n    }\n\n    render() {\n        let t = this.props.t;\n        let font = \"\";\n        return (\n            <div className=\"Container\">\n                {font}\n                <div className=\"MainColumn\" aria-hidden={this.state.modal ? \"true\" : \"false\"}>\n                    <div className=\"Buffer\"/>\n                    <div className=\"ContentWrapper\">\n                        <header className=\"Header\">\n                            <span className=\"IconSet Left\">\n                                <button className=\"Help Icon TipBelow\" title={t(\"titles.how-to\")} onClick={this.openHelp}>\n                                    <i className=\"fa-solid fa-circle-question\"></i>\n                                </button>\n                                <button className=\"Info Icon TipBelow\" title={t(\"titles.credits\")} onClick={this.openInfo}>\n                                    <i className=\"fa-solid fa-circle-info\"></i>\n                                </button>\n                            </span>\n                            <h1>Novle</h1>\n                            <span className=\"IconSet Right\">\n                                <button className=\"Settings Icon TipBelow\" title={t(\"titles.settings\")} onClick={this.openSettings}>\n                                    <i className=\"fa-solid fa-gear\"></i>\n                                </button>\n                                <button className=\"Stats Icon TipBelow\" title={t(\"titles.score\")} onClick={this.openStats}>\n                                    <i className=\"fa-solid fa-square-poll-horizontal\"></i>\n                                </button>\n                            </span>\n                        </header>\n                        <Passage lines={this.state.puzzle.lines}/>\n                        <div className=\"Body\">\n                            <Guesses puzzle={this.state.puzzle} key={this.state.puzzle.order}/>\n                        </div>\n                    </div>\n                </div>\n                <Info on={this.state.modal === \"info\"} onClose={this.closeModal}/>\n                <HowTo on={this.state.modal === \"help\"} onClose={this.closeModal}/>\n                <Settings on={this.state.modal === \"settings\"} word={this.state.word} onClose={this.closeModal}/>\n                <Statistics on={this.state.modal === \"stats\"} onClose={this.closeModal}/>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.fetch(\"/today.json?tz=\" + new Date().getTimezoneOffset(),\n            (result) => {\n                this.setState({\n                    puzzle: result,\n                });\n            });\n    }\n}\n\nexport default withTranslation()(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\n\ni18n\n  // i18next-http-backend\n  // loads translations from your server\n  // https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    debug: true,\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n// new usage\n// i18n.services.formatter.add('DATE_HUGE', (value, lng, options) => {\n//   return DateTime.fromJSDate(value).setLocale(lng).toLocaleString(DateTime.DATE_HUGE)\n// });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}